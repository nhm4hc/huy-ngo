C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 21:47:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DISPLAYLCD
OBJECT MODULE PLACED IN .\Objects\displayLCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE displayLCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\displayLCD.lst) TABS(2) OBJECT(.\Objects\displayLCD.obj)

line level    source

   1          #include "displayLCD.h"
   2          #include "LCD1602.h"
   3          #include "module_1.h"
   4          #include "module_2.h"
   5          #include "module_7.h"
   6          #include "module_8.h"
   7          #include "module_9.h"
   8          #include "module_11.h"
   9          #include "module_12.h"
  10          #include "module_15.h"
  11          
  12          void IrInit(void){
  13   1        checkRun = 0;
  14   1        module = 0;
  15   1        IT0 = 1;
  16   1        EX0 = 1;
  17   1        EA = 1; 
  18   1        IRIN = 1;
  19   1      }
  20          
  21          void DelayMs(unsigned int x){
  22   1        unsigned char i;
  23   1        while(x--)
  24   1        {
  25   2          for (i = 0; i<13; i++){}
  26   2        }
  27   1      }
  28          
  29          void ReadIr(void) interrupt 0 {
  30   1        unsigned char j,k;
  31   1        unsigned int err;
  32   1        Time=0;          
  33   1        DelayMs(70); //Goi ham delay de tao do tre 70ms
  34   1        if(IRIN==1) //Kiem tra xem tin hieu hong ngoai co dang nhan duoc khong  
  35   1        { 
  36   2          err=1000; //Dat 1 gia tri timeout 
  37   2          while((IRIN==0)&&(err>0)) //wait den khi TRIN len muc 1 hoac timeout
  38   2          {     
  39   3            DelayMs(1);
  40   3            err--;
  41   3          } 
  42   2          if(IRIN==1) //Neu tin hieu len muc 1    
  43   2          {
  44   3            err=500;
  45   3            while((IRIN==1)&&(err>0))// Wait cho den khi TRIN xuong muc 0 hoac timeout     
  46   3            {
  47   4              DelayMs(1);
  48   4              err--;
  49   4            }
  50   3            for(k=0;k<4;k++) //Nhan 1 byte du lieu
  51   3            {       
  52   4              for(j=0;j<8;j++) //Nhan 8 bitt du lieu  
  53   4              {
  54   5                err=60;   
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 21:47:18 PAGE 2   

  55   5                while((IRIN==0)&&(err>0)) // Wait cho den khi TRIN xuong muc 1 hoac timeout
  56   5                {
  57   6                  DelayMs(1);
  58   6                  err--;
  59   6                }
  60   5                err=500;
  61   5                while((IRIN==1)&&(err>0)) // Wait cho den khi TRIN xuong muc 0 hoac timeout 
  62   5                {
  63   6                  DelayMs(1);
  64   6                  Time++;
  65   6                  err--;
  66   6                  if(Time>30) //Neu thoi gian TRIN o muc 1 qua 30ms
  67   6                  {
  68   7                    EX0=1; //Cho ph?p ngat ngoai vi
  69   7                    return; //Thoat khoi ham ngat
  70   7                  }
  71   6                }
  72   5                IrValue[k]>>=1; //bitt 0 se duoc day vao bitt cao nhat cua IrValue[k] 
  73   5                if(Time>=8) //Neu thoi gian TRIN muc cao lon hon 8ms    
  74   5                {
  75   6                  IrValue[k]|=0x80; //bitt 1 se duoc day vao bitt cao nhat cua IrValue[k] 
  76   6                }
  77   5                Time=0; // set time ve 0              
  78   5              }
  79   4            }
  80   3          }
  81   2          if(IrValue[2]!=~IrValue[3]) //Kiem tra tinh nhat quan cua du lieu
  82   2          {
  83   3            return;
  84   3          }
  85   2        }     
  86   1      }
  87          
  88          void hienThiChuc(int x){
  89   1        LcdWriteCom(0x80+0x09);
  90   1        LcdWriteData(x+0x30); 
  91   1      }
  92          
  93          void hienThiDonVi(int x){
  94   1        LcdWriteCom(0x80+0x0a);
  95   1        LcdWriteData(x+0x30); 
  96   1      }
  97            
  98          void reset(void){
  99   1        int i;
 100   1        checkRun = 0;
 101   1        IrValue[2] = 0;
 102   1        module = 0;
 103   1        hienThiDonVi(0x6B);
 104   1        hienThiChuc(0x6B);  
 105   1        LcdWriteCom(0x80+0x40);
 106   1        for(i=0;i<9;i++)
 107   1        {
 108   2          LcdWriteData(CDIS2[i]); 
 109   2        }
 110   1      }
 111          
 112          void xuLi(int x){
 113   1        if(checkRun==0)
 114   1        {
 115   2          module = x*10 + module;
 116   2          hienThiChuc(x);
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 21:47:18 PAGE 3   

 117   2          checkRun = 1;
 118   2          IrValue[2] = 0;
 119   2        }
 120   1        else if(checkRun==1)
 121   1        {
 122   2          module = x + module;
 123   2          hienThiDonVi(x);
 124   2          checkRun =3;
 125   2          IrValue[2] = 0;
 126   2        }
 127   1      }
 128          
 129          void runModule(int x){
 130   1        switch (x) 
 131   1        {
 132   2          case 1:
 133   2              module_1();
 134   2              break;
 135   2          case 2:
 136   2              module_2();
 137   2              break;
 138   2          case 3:
 139   2              // empty
 140   2              break;
 141   2          case 4:
 142   2              // empty
 143   2              break;
 144   2          case 5:
 145   2              // empty
 146   2              break;
 147   2          case 6:
 148   2              // empty
 149   2              break;
 150   2          case 7:
 151   2              //LCD12864_DrowPic(&ars);
 152   2              //module 7 in here
 153   2              break;
 154   2          case 8:
 155   2              module_8();
 156   2              break;
 157   2          case 9:
 158   2              module_9();
 159   2              break;
 160   2          case 10:
 161   2              // module 10 in here
 162   2              // Using LCD16x2 for displaying, so dont call again
 163   2              break;
 164   2          case 11:
 165   2              module_11();
*** WARNING C206 IN LINE 165 OF displayLCD.c: 'module_11': missing function-prototype
 166   2              break;
 167   2          case 12:
 168   2              module_12();
 169   2              break;
 170   2          case 13:
 171   2              // empty
 172   2              break;
 173   2          case 14:
 174   2              // empty
 175   2              break;
 176   2          case 15:
 177   2              module_15();
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 21:47:18 PAGE 4   

 178   2              break;
 179   2          default:
 180   2              reset();
 181   2              break;
 182   2        }
 183   1      }
 184          
 185          void disableInterrupt(void){
 186   1        ET1 = 0;
 187   1        ET0 = 0;
 188   1      }
 189          
 190          void displayLCD(void){
 191   1        unsigned char i;
 192   1        LcdWriteCom(0x80); 
 193   1        for(i=0;i<9;i++)
 194   1        {
 195   2          LcdWriteData(CDIS1[i]); 
 196   2        }
 197   1        LcdWriteCom(0x80+0x40);
 198   1        for(i=0;i<9;i++)
 199   1        {
 200   2          LcdWriteData(CDIS2[i]); 
 201   2        }
 202   1      }
 203          
 204          void signalRecieved(void){
 205   1        unsigned char i;
 206   1        IrValue[4]=IrValue[2]>>4;
 207   1        IrValue[5]=IrValue[2]&0x0f; 
 208   1        if(IrValue[4]==0x00 && IrValue[5]==0x0D)
 209   1        {     //0   0D
 210   2          nutBam = 0;
 211   2          xuLi(nutBam);
 212   2        }
 213   1        if(IrValue[4]==0x00 && IrValue[5]==0x0C)
 214   1        { //1   0C  
 215   2          nutBam = 1;
 216   2          xuLi(nutBam);
 217   2        }
 218   1        if(IrValue[4]==0x01 && IrValue[5]==0x08)
 219   1        {   //2   18
 220   2          nutBam = 2;
 221   2          xuLi(nutBam);
 222   2        }
 223   1        if(IrValue[4]==0x05 && IrValue[5]==0x0E)
 224   1        {   //3   5E
 225   2          nutBam = 3;
 226   2          xuLi(nutBam);
 227   2        }
 228   1        if(IrValue[4]==0x00 && IrValue[5]==0x08)
 229   1        {     //4   08
 230   2          nutBam = 4;
 231   2          xuLi(nutBam);
 232   2        }
 233   1        if(IrValue[4]==0x01 && IrValue[5]==0x0C)
 234   1        { //5   1C  
 235   2          nutBam = 5;
 236   2          xuLi(nutBam);
 237   2        }
 238   1        if(IrValue[4]==0x05 && IrValue[5]==0x0A)
 239   1        {   //6   5A
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 21:47:18 PAGE 5   

 240   2          nutBam = 6;
 241   2          xuLi(nutBam);
 242   2        }
 243   1        if(IrValue[4]==0x04 && IrValue[5]==0x02)
 244   1        {   //7   42
 245   2          nutBam = 7;
 246   2          xuLi(nutBam);
 247   2        }
 248   1        if(IrValue[4]==0x05 && IrValue[5]==0x02)
 249   1        {     //8   52
 250   2          nutBam = 8;
 251   2          xuLi(nutBam);
 252   2        }
 253   1        if(IrValue[4]==0x04 && IrValue[5]==0x0A)
 254   1        { //9   4A
 255   2          nutBam = 9;
 256   2          xuLi(nutBam);
 257   2        }
 258   1        
 259   1        if(IrValue[4]==0x04 && IrValue[5]==0x04)
 260   1        {   //mode    44H
 261   2          if(module < 20)
 262   2          {
 263   3            runModule(module);
 264   3          }
 265   2          else
 266   2          {
 267   3            LcdWriteCom(0x80+0x40);
 268   3            for(i=0;i<9;i++)
 269   3            {
 270   4              LcdWriteData(CDIS4[i]); 
 271   4            }
 272   3            DelayMs(7000);
 273   3          }
 274   2          //reset();
 275   2        }
 276   1        if(IrValue[4]==0x04 && IrValue[5]==0x06)
 277   1        {   //stop    46H
 278   2          IrValue[2] = 0;
 279   2          disableInterrupt();
 280   2        }
 281   1        
 282   1        if(IrValue[4]==0x04 && IrValue[5]==0x05)
 283   1        {   //nguon   45H
 284   2          reset();
 285   2        }
 286   1      }
 287          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    986    ----
   CONSTANT SIZE    =   1086    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     41      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
