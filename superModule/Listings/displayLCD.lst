C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 16:17:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DISPLAYLCD
OBJECT MODULE PLACED IN .\Objects\displayLCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE displayLCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\displayLCD.lst) TABS(2) OBJECT(.\Objects\displayLCD.obj)

line level    source

   1          #include "displayLCD.h"
   2          #include "LCD1602.h"
   3          #include "module_7.h"
   4          #include "module_8.h"
   5          #include "module_9.h"
   6          #include "module_11.h"
   7          #include "module_12.h"
   8          #include "module_15.h"
   9          
  10          void IrInit(void){
  11   1        checkRun = 0;
  12   1        module = 0;
  13   1        IT0 = 1;
  14   1        EX0 = 1;
  15   1        EA = 1; 
  16   1        IRIN = 1;
  17   1      }
  18          
  19          void DelayMs(unsigned int x){
  20   1        unsigned char i;
  21   1        while(x--)
  22   1        {
  23   2          for (i = 0; i<13; i++){}
  24   2        }
  25   1      }
  26          
  27          void ReadIr(void) interrupt 0 {
  28   1        unsigned char j,k;
  29   1        unsigned int err;
  30   1        Time=0;          
  31   1        DelayMs(70); //Goi ham delay de tao do tre 70ms
  32   1        if(IRIN==1) //Kiem tra xem tin hieu hong ngoai co dang nhan duoc khong  
  33   1        { 
  34   2          err=1000; //Dat 1 gia tri timeout 
  35   2          while((IRIN==0)&&(err>0)) //wait den khi TRIN len muc 1 hoac timeout
  36   2          {     
  37   3            DelayMs(1);
  38   3            err--;
  39   3          } 
  40   2          if(IRIN==1) //Neu tin hieu len muc 1    
  41   2          {
  42   3            err=500;
  43   3            while((IRIN==1)&&(err>0))// Wait cho den khi TRIN xuong muc 0 hoac timeout     
  44   3            {
  45   4              DelayMs(1);
  46   4              err--;
  47   4            }
  48   3            for(k=0;k<4;k++) //Nhan 1 byte du lieu
  49   3            {       
  50   4              for(j=0;j<8;j++) //Nhan 8 bitt du lieu  
  51   4              {
  52   5                err=60;   
  53   5                while((IRIN==0)&&(err>0)) // Wait cho den khi TRIN xuong muc 1 hoac timeout
  54   5                {
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 16:17:58 PAGE 2   

  55   6                  DelayMs(1);
  56   6                  err--;
  57   6                }
  58   5                err=500;
  59   5                while((IRIN==1)&&(err>0)) // Wait cho den khi TRIN xuong muc 0 hoac timeout 
  60   5                {
  61   6                  DelayMs(1);
  62   6                  Time++;
  63   6                  err--;
  64   6                  if(Time>30) //Neu thoi gian TRIN o muc 1 qua 30ms
  65   6                  {
  66   7                    EX0=1; //Cho ph?p ngat ngoai vi
  67   7                    return; //Thoat khoi ham ngat
  68   7                  }
  69   6                }
  70   5                IrValue[k]>>=1; //bitt 0 se duoc day vao bitt cao nhat cua IrValue[k] 
  71   5                if(Time>=8) //Neu thoi gian TRIN muc cao lon hon 8ms    
  72   5                {
  73   6                  IrValue[k]|=0x80; //bitt 1 se duoc day vao bitt cao nhat cua IrValue[k] 
  74   6                }
  75   5                Time=0; // set time ve 0              
  76   5              }
  77   4            }
  78   3          }
  79   2          if(IrValue[2]!=~IrValue[3]) //Kiem tra tinh nhat quan cua du lieu
  80   2          {
  81   3            return;
  82   3          }
  83   2        }     
  84   1      }
  85          
  86          void hienThiChuc(int x){
  87   1        LcdWriteCom(0x80+0x09);
  88   1        LcdWriteData(x+0x30); 
  89   1      }
  90          
  91          void hienThiDonVi(int x){
  92   1        LcdWriteCom(0x80+0x0a);
  93   1        LcdWriteData(x+0x30); 
  94   1      }
  95            
  96          void reset(void){
  97   1        int i;
  98   1        checkRun = 0;
  99   1        IrValue[2] = 0;
 100   1        module = 0;
 101   1        hienThiDonVi(0x6B);
 102   1        hienThiChuc(0x6B);  
 103   1        LcdWriteCom(0x80+0x40);
 104   1        for(i=0;i<9;i++)
 105   1        {
 106   2          LcdWriteData(CDIS2[i]); 
 107   2        }
 108   1      }
 109          
 110          void xuLi(int x){
 111   1        if(checkRun==0)
 112   1        {
 113   2          module = x*10 + module;
 114   2          hienThiChuc(x);
 115   2          checkRun = 1;
 116   2          IrValue[2] = 0;
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 16:17:58 PAGE 3   

 117   2        }
 118   1        else if(checkRun==1)
 119   1        {
 120   2          module = x + module;
 121   2          hienThiDonVi(x);
 122   2          checkRun =3;
 123   2          IrValue[2] = 0;
 124   2        }
 125   1      }
 126          
 127          void runModule(int x){
 128   1        switch (x) 
 129   1        {
 130   2          case 1:
 131   2              // empty
 132   2              break;
 133   2          case 2:
 134   2              // empty
 135   2              break;
 136   2          case 3:
 137   2              // empty
 138   2              break;
 139   2          case 4:
 140   2              // empty
 141   2              break;
 142   2          case 5:
 143   2              // empty
 144   2              break;
 145   2          case 6:
 146   2              // empty
 147   2              break;
 148   2          case 7:
 149   2              //LCD12864_DrowPic(&ars);
 150   2              //module 7 in here
 151   2              break;
 152   2          case 8:
 153   2              module_8();
 154   2              break;
 155   2          case 9:
 156   2              module_9();
 157   2              break;
 158   2          case 10:
 159   2              // module 10 in here
 160   2              // Using LCD16x2 for displaying, so dont call again
 161   2              break;
 162   2          case 11:
 163   2              module_11();
*** WARNING C206 IN LINE 163 OF displayLCD.c: 'module_11': missing function-prototype
 164   2              break;
 165   2          case 12:
 166   2              module_12();
 167   2              break;
 168   2          case 13:
 169   2              // empty
 170   2              break;
 171   2          case 14:
 172   2              // empty
 173   2              break;
 174   2          case 15:
 175   2              module_15();
 176   2              break;
 177   2          default:
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 16:17:58 PAGE 4   

 178   2              reset();
 179   2              break;
 180   2        }
 181   1      }
 182          
 183          void displayLCD(void){
 184   1        unsigned char i;
 185   1        LcdWriteCom(0x80); 
 186   1        for(i=0;i<9;i++)
 187   1        {
 188   2          LcdWriteData(CDIS1[i]); 
 189   2        }
 190   1        LcdWriteCom(0x80+0x40);
 191   1        for(i=0;i<9;i++)
 192   1        {
 193   2          LcdWriteData(CDIS2[i]); 
 194   2        }
 195   1      }
 196          
 197          void signalRecieved(void){
 198   1        unsigned char i;
 199   1        IrValue[4]=IrValue[2]>>4;
 200   1        IrValue[5]=IrValue[2]&0x0f; 
 201   1        if(IrValue[4]==0x00 && IrValue[5]==0x0D)
 202   1        {     //0   0D
 203   2          nutBam = 0;
 204   2          xuLi(nutBam);
 205   2        }
 206   1        if(IrValue[4]==0x00 && IrValue[5]==0x0C)
 207   1        { //1   0C  
 208   2          nutBam = 1;
 209   2          xuLi(nutBam);
 210   2        }
 211   1        if(IrValue[4]==0x01 && IrValue[5]==0x08)
 212   1        {   //2   18
 213   2          nutBam = 2;
 214   2          xuLi(nutBam);
 215   2        }
 216   1        if(IrValue[4]==0x05 && IrValue[5]==0x0E)
 217   1        {   //3   5E
 218   2          nutBam = 3;
 219   2          xuLi(nutBam);
 220   2        }
 221   1        if(IrValue[4]==0x00 && IrValue[5]==0x08)
 222   1        {     //4   08
 223   2          nutBam = 4;
 224   2          xuLi(nutBam);
 225   2        }
 226   1        if(IrValue[4]==0x01 && IrValue[5]==0x0C)
 227   1        { //5   1C  
 228   2          nutBam = 5;
 229   2          xuLi(nutBam);
 230   2        }
 231   1        if(IrValue[4]==0x05 && IrValue[5]==0x0A)
 232   1        {   //6   5A
 233   2          nutBam = 6;
 234   2          xuLi(nutBam);
 235   2        }
 236   1        if(IrValue[4]==0x04 && IrValue[5]==0x02)
 237   1        {   //7   42
 238   2          nutBam = 7;
 239   2          xuLi(nutBam);
C51 COMPILER V9.60.0.0   DISPLAYLCD                                                        12/10/2023 16:17:58 PAGE 5   

 240   2        }
 241   1        if(IrValue[4]==0x05 && IrValue[5]==0x02)
 242   1        {     //8   52
 243   2          nutBam = 8;
 244   2          xuLi(nutBam);
 245   2        }
 246   1        if(IrValue[4]==0x04 && IrValue[5]==0x0A)
 247   1        { //9   4A
 248   2          nutBam = 9;
 249   2          xuLi(nutBam);
 250   2        }
 251   1        
 252   1        if(IrValue[4]==0x04 && IrValue[5]==0x04)
 253   1        {   //mode    44H
 254   2          if(module < 20)
 255   2          {
 256   3            runModule(module);
 257   3          }
 258   2          else
 259   2          {
 260   3            LcdWriteCom(0x80+0x40);
 261   3            for(i=0;i<9;i++)
 262   3            {
 263   4              LcdWriteData(CDIS4[i]); 
 264   4            }
 265   3            DelayMs(7000);
 266   3          }
 267   2          //reset();
 268   2        }
 269   1        if(IrValue[4]==0x04 && IrValue[5]==0x06)
 270   1        {   //stop    46H
 271   2          LcdWriteCom(0x80+0x40);
 272   2          for(i=0;i<9;i++)
 273   2          {
 274   3            LcdWriteData(CDIS2[i]); //Hien thi 'IR-CODE:--H' len LCD
 275   3          }
 276   2          IrValue[2] = 0;
 277   2        }
 278   1        
 279   1        if(IrValue[4]==0x04 && IrValue[5]==0x05)
 280   1        {   //nguon   45H
 281   2          reset();
 282   2        }
 283   1      }
 284          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1007    ----
   CONSTANT SIZE    =   1086    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
