C51 COMPILER V9.01   DS1302                                                                12/20/2013 09:01:17 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ds1302.OBJ
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE ds1302.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"ds1302.h"
   2          
   3          //---DS1302写入和读取时分秒的地址命令---//
   4          //---秒分时日月周年 最低位读写位;-------//
   5          uchar code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d}; 
   6          uchar code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   7          
   8          //---DS1302时钟初始化2013年1月1日星期二12点00分00秒。---//
   9          //---存储顺序是秒分时日月周年,存储格式是用BCD码---//
  10          uchar TIME[7] = {0, 0, 0x12, 0x01, 0x01, 0x02, 0x13};
  11          
  12          /*******************************************************************************
  13          * 函 数 名         : Ds1302Write
  14          * 函数功能                 : 向DS1302命令（地址+数据）
  15          * 输    入         : addr,dat
  16          * 输    出         : 无
  17          *******************************************************************************/
  18          
  19          void Ds1302Write(uchar addr, uchar dat)
  20          {    
  21   1              uchar n;
  22   1      
  23   1          EA = 0;
  24   1              RST = 0;
  25   1              _nop_();
  26   1      
  27   1              SCLK = 0;//先将SCLK置低电平。
  28   1              _nop_();
  29   1              RST = 1; //然后将RST(CE)置高电平。
  30   1              _nop_();
  31   1      
  32   1              for (n=0; n<8; n++)//开始传送八位地址命令
  33   1              {
  34   2                      DSIO = addr & 0x01;//数据从低位开始传送
  35   2                      addr >>= 1;
  36   2                      SCLK = 1;//数据在上升沿时，DS1302读取数据
  37   2                      _nop_();
  38   2                      SCLK = 0;
  39   2                      _nop_();
  40   2              }
  41   1              for (n=0; n<8; n++)//写入8位数据
  42   1              {
  43   2                      DSIO = dat & 0x01;
  44   2                      dat >>= 1;
  45   2                      SCLK = 1;//数据在上升沿时，DS1302读取数据
  46   2                      _nop_();
  47   2                      SCLK = 0;
  48   2                      _nop_();        
  49   2              }       
  50   1                       
  51   1              RST = 0;//传送数据结束
  52   1              _nop_();
  53   1          EA = 1;
  54   1      }
  55          
C51 COMPILER V9.01   DS1302                                                                12/20/2013 09:01:17 PAGE 2   

  56          /*******************************************************************************
  57          * 函 数 名         : Ds1302Read
  58          * 函数功能                 : 读取一个地址的数据
  59          * 输    入         : addr
  60          * 输    出         : dat
  61          *******************************************************************************/
  62          
  63          uchar Ds1302Read(uchar addr)
  64          {   
  65   1          uchar n,dat,dat1;
  66   1          
  67   1          EA =0;
  68   1              RST = 0;
  69   1              _nop_();
  70   1      
  71   1              SCLK = 0;//先将SCLK置低电平。
  72   1              _nop_();
  73   1              RST = 1;//然后将RST(CE)置高电平。
  74   1              _nop_();
  75   1      
  76   1              for(n=0; n<8; n++)//开始传送八位地址命令
  77   1              {
  78   2                      DSIO = addr & 0x01;//数据从低位开始传送
  79   2                      addr >>= 1;
  80   2                      SCLK = 1;//数据在上升沿时，DS1302读取数据
  81   2                      _nop_();
  82   2                      SCLK = 0;//DS1302下降沿时，放置数据
  83   2                      _nop_();
  84   2              }
  85   1              _nop_();
  86   1              for(n=0; n<8; n++)//读取8位数据
  87   1              {
  88   2                      dat1 = DSIO;//从最低位开始接收
  89   2                      dat = (dat>>1) | (dat1<<7);
  90   2                      SCLK = 1;
  91   2                      _nop_();
  92   2                      SCLK = 0;//DS1302下降沿时，放置数据
  93   2                      _nop_();
  94   2              }
  95   1      
  96   1              RST = 0;
  97   1              _nop_();        //以下为DS1302复位的稳定时间,必须的。
  98   1              SCLK = 1;
  99   1              _nop_();
 100   1              DSIO = 0;
 101   1              _nop_();
 102   1              DSIO = 1;
 103   1              _nop_();
 104   1          EA = 1;
 105   1              return dat;     
 106   1      }
 107          
 108          /*******************************************************************************
 109          * 函 数 名         : Ds1302Init
 110          * 函数功能                 : 初始化DS1302.
 111          * 输    入         : 无
 112          * 输    出         : 无
 113          *******************************************************************************/
 114          
 115          void Ds1302Init()
 116          {
 117   1              uchar n;
C51 COMPILER V9.01   DS1302                                                                12/20/2013 09:01:17 PAGE 3   

 118   1              Ds1302Write(0x8E,0X00);          //禁止写保护，就是关闭写保护功能
 119   1              for (n=0; n<7; n++)//写入7个字节的时钟信号：分秒时日月周年
 120   1              {
 121   2                      Ds1302Write(WRITE_RTC_ADDR[n],TIME[n]); 
 122   2              }
 123   1              Ds1302Write(0x8E,0x80);          //打开写保护功能
 124   1      }
 125          
 126          /*******************************************************************************
 127          * 函 数 名         : Ds1302ReadTime
 128          * 函数功能                 : 读取时钟信息
 129          * 输    入         : 无
 130          * 输    出         : 无
 131          *******************************************************************************/
 132          
 133          void Ds1302ReadTime()
 134          {
 135   1              uchar n;
 136   1              for (n=0; n<7; n++)//读取7个字节的时钟信号：分秒时日月周年
 137   1              {
 138   2                      TIME[n] = Ds1302Read(READ_RTC_ADDR[n]);
 139   2              }
 140   1                      
 141   1      }
 142          
 143          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
