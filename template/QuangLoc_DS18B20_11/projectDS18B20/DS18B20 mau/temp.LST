C51 COMPILER V9.60.0.0   TEMP                                                              11/17/2023 01:26:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN temp.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "temp.h"  // Bao gom file header cho DS18B20
   2          
   3          // Ham tre khoang 1ms
   4          void Delay1ms(unsigned int y)
   5          {
   6   1          unsigned int x;
   7   1          for(y; y>0; y--)
   8   1              for(x=110; x>0; x--);
   9   1      }
  10          
  11          // Ham khoi tao DS18B20
  12          unsigned char Ds18b20Init()
  13          {
  14   1          unsigned int i;
  15   1          DSPORT=0;  // Dat DS18B20 vao trang thai tre
  16   1          i=70;
  17   1          while(i--);  // Tre 642us
  18   1          DSPORT=1;  // Dat DS18B20 vao trang thai hoat dong
  19   1          i=0;
  20   1          while(DSPORT)  // Doi DS18B20 tro ve trang thai ban dau
  21   1          {
  22   2              i++;
  23   2              if(i>5000)  // Neu tre qua 5ms
  24   2                  return 0;  // Khoi tao that bai
  25   2          }
  26   1          return 1;  // Khoi tao thanh cong
  27   1      }
  28          
  29          // Ham viet mot byte vao DS18B20
  30          void Ds18b20WriteByte(unsigned char dat)
  31          {
  32   1          unsigned int i, j;
  33   1          for(j=0; j<8; j++)
  34   1          {
  35   2              DSPORT=0;  // Tre 1us truoc khi viet
  36   2              i++;
  37   2              DSPORT=dat & 0x01;  // Viet du lieu
  38   2              i=6;
  39   2              while(i--);  // Tre 68us
  40   2              DSPORT=1;  // Tha DSPORT
  41   2              dat >>= 1;  // Dich bit de ghi tiep
  42   2          }
  43   1      }
  44          
  45          // Ham doc mot byte tu DS18B20
  46          unsigned char Ds18b20ReadByte()
  47          {
  48   1          unsigned char byte, bi;
  49   1          unsigned int i, j;
  50   1          for(j=8; j>0; j--)
  51   1          {
  52   2              DSPORT=0;  // Tre 1us
  53   2              i++;
  54   2              DSPORT=1;  // Tha DSPORT
  55   2              i++;
C51 COMPILER V9.60.0.0   TEMP                                                              11/17/2023 01:26:26 PAGE 2   

  56   2              i++;  // Tre 6us de du lieu on dinh
  57   2              bi=DSPORT;  // Doc du lieu
  58   2              byte = (byte >> 1) | (bi << 7);  // Luu du lieu doc duoc
  59   2              i=4;  // Tre 48us
  60   2              while(i--);
  61   2          }
  62   1          return byte;
  63   1      }
  64          
  65          // Ham bat dau qua trinh chuyen doi nhiet do DS18B20
  66          void Ds18b20ChangTemp()
  67          {
  68   1          Ds18b20Init();  // Khoi tao DS18B20
  69   1          Delay1ms(1);
  70   1          Ds18b20WriteByte(0xcc);  // Bo qua lenh ROM
  71   1          Ds18b20WriteByte(0x44);  // Lenh chuyen doi nhiet do
  72   1      }
  73          
  74          // Ham bat dau qua trinh doc nhiet do tu DS18B20
  75          void Ds18b20ReadTempCom()
  76          {
  77   1          Ds18b20Init();  // Khoi tao DS18B20
  78   1          Delay1ms(1);
  79   1          Ds18b20WriteByte(0xcc);  // Bo qua lenh ROM
  80   1          Ds18b20WriteByte(0xbe);  // Lenh doc nhiet do
  81   1      }
  82          
  83          // Ham doc nhiet do tu DS18B20
  84          int Ds18b20ReadTemp()
  85          {
  86   1          int temp=0;
  87   1          unsigned char tmh, tml;
  88   1          Ds18b20ChangTemp();  // Chuyen doi nhiet do
  89   1          Ds18b20ReadTempCom();  // Doc nhiet do
  90   1          tml = Ds18b20ReadByte();  // Doc byte thap
  91   1          tmh = Ds18b20ReadByte();  // Doc byte cao
  92   1          temp = tmh;
  93   1          temp <<= 8;
  94   1          temp |= tml;
  95   1          return temp;  // Tra ve gia tri nhiet do
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
