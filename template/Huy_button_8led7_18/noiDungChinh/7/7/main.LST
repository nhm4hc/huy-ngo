C51 COMPILER V9.60.0.0   MAIN                                                              12/10/2023 21:35:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          #include<REGX52.H>
   3          
   4          typedef unsigned int u16; 
   5          typedef unsigned char u8;
   6          
   7          //PORT 0 = LED 
   8          #define SMG_A_DP_PORT P0  
   9          
  10          sbit module2_LSA = P2^2;
  11          sbit module2_LSB = P2^3;
  12          sbit module2_LSC = P2^4;
  13          
  14          sbit module2_K1 = P3^1;
  15          sbit module2_K2 = P3^0;
  16          
  17          unsigned int count;
  18          
  19          u8 gsmg_code[17]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
  20          
  21          void delayMS(unsigned int t);
  22          void ISR_timer0(void);
  23          void smg_display1(void);
  24          void smg_display2(void);
  25          
  26          void delayMS(unsigned int t){
  27   1          TMOD = 0x01;
  28   1          TH0 = 0xFC;
  29   1          TL0 = 0x18;
  30   1          IE = 0x82;
  31   1          count =0;
  32   1          TR0 =1;
  33   1          while(count < t);
  34   1          IE =0;
  35   1          TR0 =0;
  36   1      }
  37          
  38          void ISR_timer0(void) interrupt 1{
  39   1        TH0 = 0xFC;
  40   1        TL0 = 0x18;
  41   1        count++;
  42   1      }
  43          
  44          void smg_display1(void){
  45   1        u8 i;
  46   1        for(i=0;i<8;i++)
  47   1        {
  48   2          switch(i)
  49   2          {
  50   3            case 0: module2_LSC=1; module2_LSB=1; module2_LSA=1; break;
  51   3            case 1: module2_LSC=1; module2_LSB=1; module2_LSA=0; break;
  52   3            case 2: module2_LSC=1; module2_LSB=0; module2_LSA=1; break;
  53   3            case 3: module2_LSC=1; module2_LSB=0; module2_LSA=0; break;
  54   3            case 4: module2_LSC=0; module2_LSB=1; module2_LSA=1; break;
  55   3            case 5: module2_LSC=0; module2_LSB=1; module2_LSA=0; break;
C51 COMPILER V9.60.0.0   MAIN                                                              12/10/2023 21:35:28 PAGE 2   

  56   3            case 6: module2_LSC=0; module2_LSB=0; module2_LSA=1; break;
  57   3            case 7: module2_LSC=0; module2_LSB=0; module2_LSA=0; break;
  58   3          }
  59   2          SMG_A_DP_PORT = gsmg_code[i];
  60   2          delayMS(1000);
  61   2          SMG_A_DP_PORT=0x00;
  62   2        }
  63   1      }
  64          
  65          void smg_display2(void){
  66   1        u8 i;
  67   1        for(i=8;i<18;i++)
  68   1        {
  69   2          switch(i)
  70   2          {
  71   3            case 8: module2_LSC=1; module2_LSB=1; module2_LSA=1; break;
  72   3            case 9: module2_LSC=1; module2_LSB=1; module2_LSA=0; break;
  73   3            case 10: module2_LSC=1; module2_LSB=0; module2_LSA=1; break;
  74   3            case 11: module2_LSC=1; module2_LSB=0; module2_LSA=0; break;
  75   3            case 12: module2_LSC=0; module2_LSB=1; module2_LSA=1; break;
  76   3            case 13: module2_LSC=0; module2_LSB=1; module2_LSA=0; break;
  77   3            case 14: module2_LSC=0; module2_LSB=0; module2_LSA=1; break;
  78   3            case 15: module2_LSC=0; module2_LSB=0; module2_LSA=0; break;;
  79   3          }
  80   2          SMG_A_DP_PORT = gsmg_code[i];
  81   2          delayMS(1000);
  82   2          SMG_A_DP_PORT=0x00;
  83   2        }
  84   1      }
  85          
  86          void main(void)
  87          { 
  88   1        while(1)
  89   1        {
  90   2          if(module2_K1 == 0)
  91   2          {
  92   3            smg_display1();
  93   3          }
  94   2          if(module2_K2 == 0)
  95   2          {
  96   3            smg_display2();
  97   3          }
  98   2        }   
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    297    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
